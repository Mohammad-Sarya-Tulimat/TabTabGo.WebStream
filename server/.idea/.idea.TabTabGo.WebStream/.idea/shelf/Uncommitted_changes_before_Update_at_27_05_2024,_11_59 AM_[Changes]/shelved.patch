Index: TabTabGo.WebStream/Builders/EventHandlerBuilders/ComplexEventHandlerBuilder.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\nusing System.Collections.Generic;\nusing System.Text;\nusing TabTabGo.WebStream.Model;\nusing TabTabGo.WebStream.Services;\n\nnamespace TabTabGo.WebStream.Builders.EventHandlerBuilders\n{\n    public class ComplexEventHandlerBuilder\n    { \n        List<(Func<WebStreamMessage, bool>, EventHandlerBuilder)> handlers = new List<(Func<WebStreamMessage, bool>, EventHandlerBuilder)>();\n        public ComplexEventHandlerBuilder AddEventHandler(Func<WebStreamMessage, bool> predict, Action<EventHandlerBuilder> action)\n        {\n            var builder = new EventHandlerBuilder();\n            action(builder);\n            var item = (predict, builder);\n            handlers.Add(item);\n            return this;\n        }\n        public ComplexEventHandler Build()\n        {\n            return new ComplexEventHandler(handlers);\n        }\n    }\n}\n
===================================================================
diff --git a/TabTabGo.WebStream/Builders/EventHandlerBuilders/ComplexEventHandlerBuilder.cs b/TabTabGo.WebStream/Builders/EventHandlerBuilders/ComplexEventHandlerBuilder.cs
--- a/TabTabGo.WebStream/Builders/EventHandlerBuilders/ComplexEventHandlerBuilder.cs	
+++ b/TabTabGo.WebStream/Builders/EventHandlerBuilders/ComplexEventHandlerBuilder.cs	
@@ -9,7 +9,7 @@
     public class ComplexEventHandlerBuilder
     { 
         List<(Func<WebStreamMessage, bool>, EventHandlerBuilder)> handlers = new List<(Func<WebStreamMessage, bool>, EventHandlerBuilder)>();
-        public ComplexEventHandlerBuilder AddEventHandler(Func<WebStreamMessage, bool> predict, Action<EventHandlerBuilder> action)
+        public ComplexEventHandlerBuilder AddEventHandler(Func<WebStreamMessage, bool> predict,  Action<EventHandlerBuilder> action)
         {
             var builder = new EventHandlerBuilder();
             action(builder);
